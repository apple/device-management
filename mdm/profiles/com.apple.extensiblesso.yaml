title: Extensible Single Sign-On
description: Configures an app extension to handle SSO.
payload:
  payloadtype: com.apple.extensiblesso
  supportedOS:
    iOS:
      introduced: '13.0'
      multiple: true
      supervised: false
      allowmanualinstall: false
      sharedipad:
        mode: allowed
        devicechannel: false
        userchannel: true
      userenrollment:
        mode: allowed
    macOS:
      introduced: '10.15'
      multiple: true
      devicechannel: true
      userchannel: true
      requiresdep: false
      userapprovedmdm: true
      allowmanualinstall: false
      userenrollment:
        mode: allowed
  content: Configures an app extension that performs SSO on behalf of certain URLs.
    User channel support was added in macOS 11.0.
payloadkeys:
- key: ExtensionIdentifier
  type: <string>
  presence: required
  content: The bundle identifier of the app extension that performs SSO for the specified
    URLs.
- key: TeamIdentifier
  supportedOS:
    iOS:
      introduced: n/a
  type: <string>
  presence: optional
  content: |-
    The team identifier of the app extension.
    This key is required on macOS and ignored elsewhere.
- key: Type
  type: <string>
  presence: required
  rangelist:
  - Credential
  - Redirect
  content: The type of SSO.
- key: Realm
  type: <string>
  presence: optional
  content: |-
    The realm name for 'Credential' payloads. Use proper capitalization for this value.
    This key is ignored for 'Redirect' payloads.
- key: ExtensionData
  type: <dictionary>
  presence: optional
  content: A dictionary of arbitrary data passed through to the app extension.
  subkeys:
  - key: ANY
    type: <any>
    presence: optional
    content: Keys and values to be passed to the app extension.
- key: URLs
  type: <array>
  presence: optional
  content: |-
    An array of URL prefixes of identity providers where the app extension performs SSO.
    Required for 'Redirect' payloads. Ignored for 'Credential' payloads.
    The URLs must begin with 'http://' or 'https://', the scheme and host name are matched case-insensitively, query parameters and URL fragments are not allowed, and the URLs of all installed Extensible SSO payloads must be unique.
  subkeys:
  - key: URL
    type: <string>
    presence: required
    content: An http or https URL prefix.
- key: Hosts
  type: <array>
  presence: optional
  content: |-
    An array of host names or domain names that apps can authenticate through the app extension.
    Required for 'Credential' payloads. Ignored for 'Redirect' payloads.
    Host or domain names are matched case-insensitively, and all the host/domain names of all installed Extensible SSO payloads must be unique.
    Hosts that begin with a “.” are wildcard suffixes and match all subdomains; otherwise the host must be an exact match.
  subkeys:
  - key: hostname
    type: <string>
    presence: required
    content: A host or domain name, with or without a leading dot.
- key: ScreenLockedBehavior
  supportedOS:
    iOS:
      introduced: '15.0'
    macOS:
      introduced: '12.0'
  type: <string>
  presence: optional
  rangelist:
  - Cancel
  - DoNotHandle
  default: Cancel
  content: |-
    If set to 'Cancel', the system cancels authentication requests when the screen is locked. If set to 'DoNotHandle', the request continues without SSO instead. This does not apply to requests where 'userInterfaceEnabled' is set to 'false' or background NSURLSession requests.
    Available in iOS 15 and later and macOS 12 and later.
- key: DeniedBundleIdentifiers
  supportedOS:
    iOS:
      introduced: '15.0'
    macOS:
      introduced: '12.0'
  type: <array>
  presence: optional
  content: |-
    An array of bundle identifiers of apps that don't use SSO provided by this extension.
    Available in iOS 15 and later and macOS 12 and later.
  subkeys:
  - key: bundleIdentifier
    type: <string>
    presence: required
    content: The bundle identifier of the app.
- key: AuthenticationMethod
  supportedOS:
    iOS:
      introduced: n/a
    macOS:
      introduced: '13.0'
      deprecated: '14.0'
  type: <string>
  presence: optional
  rangelist:
  - Password
  - UserSecureEnclaveKey
  content: |-
    The Platform SSO authentication method the extension uses. Requires that the SSO Extension also supports the method.
    Available in macOS 13 and later.
- key: RegistrationToken
  supportedOS:
    iOS:
      introduced: n/a
    macOS:
      introduced: '13.0'
  type: <string>
  presence: optional
  content: |-
    The token this device uses for registration with Platform SSO. Use it for silent registration with the Identity Provider. Requires that 'PlatformSSO' 'AuthenticationMethod' isn't empty.
    Available in macOS 13 and later.
- key: PlatformSSO
  supportedOS:
    iOS:
      introduced: n/a
    macOS:
      introduced: '14.0'
  type: <dictionary>
  presence: optional
  content: This is the dictionary used to configure PlatformSSO.
  subkeys:
  - key: AuthenticationMethod
    type: <string>
    presence: optional
    rangelist:
    - Password
    - UserSecureEnclaveKey
    - SmartCard
    content: The Platform SSO authentication method to be used with the extension.
      Requires that the SSO Extension also support the method.
  - key: UseSharedDeviceKeys
    type: <boolean>
    presence: optional
    default: false
    content: If set to true, Platform SSO will use the same signing and encryption
      keys for all users.
  - key: AccountDisplayName
    type: <string>
    presence: optional
    content: The display name for the account in notifications and authentication
      requests.
  - key: LoginFrequency
    type: <integer>
    presence: optional
    range:
      min: 3600
    default: 64800
    content: The frequency where a full login is required instead of a refresh. Default
      is 18 hours. Must be > 1 hour.
  - key: EnableCreateUserAtLogin
    type: <boolean>
    presence: optional
    default: false
    content: Enables creating new users at the login window with either Passwords
      or SmartCards. Requires 'UseSharedDeviceKeys' is true.
  - key: EnableAuthorization
    type: <boolean>
    presence: optional
    default: false
    content: Enables using identity provider accounts at authorization prompts. Requires
      'UseSharedDeviceKeys' is true. The account will be assigned groups using the
      'AdministratorGroups', 'AdditionalGroups', or 'AuthorizationGroups'.
  - key: TokenToUserMapping
    type: <dictionary>
    presence: optional
    content: The attribute mapping used when creating new users or for authorization.
    subkeys:
    - key: AccountName
      type: <string>
      presence: optional
      content: The claim name to use for the user's account name.
    - key: FullName
      type: <string>
      presence: optional
      content: The claim name to use for the user's full name.
  - key: NewUserAuthorizationMode
    type: <string>
    presence: optional
    rangelist:
    - Standard
    - Admin
    - Groups
    content: |-
      This setting affects the permissions for accounts created at login by Platform SSO. It is only used when the account is created. Use of the following:
      * Standard
          The account will be a standard user.
      * Admin
          The account will be added to the local administrators group.
      * Groups
          The account will be assigned groups using the 'AdministratorGroups', 'AdditionalGroups', or 'AuthorizationGroups'.
  - key: UserAuthorizationMode
    type: <string>
    presence: optional
    rangelist:
    - Standard
    - Admin
    - Groups
    content: |-
      This setting affects the permissions after authentication by Platform SSO. It is applied each time user authenticates. Use of the following:
      * Standard
          The account will be a standard user. It will be removed from the 'admin' group.
      * Admin
          The account will be added to the local administrators group.
      * Groups
          The account will be assigned groups using the 'AdministratorGroups', 'AdditionalGroups', or 'AuthorizationGroups'.
  - key: AdministratorGroups
    type: <array>
    presence: optional
    content: The list of groups that are used for administrator access. Membership
      will be requested during authentication.
    subkeys:
    - key: Group
      type: <string>
      presence: optional
      content: The group name.
  - key: AdditionalGroups
    type: <array>
    presence: optional
    content: The list of groups that are created and do not have administrator access.
    subkeys:
    - key: Group
      type: <string>
      presence: optional
      content: The group name.
  - key: AuthorizationGroups
    type: <dictionary>
    presence: optional
    content: The pairing of Authorization Rights to group names. The Authorization
      Right will be updated to use the group when used.
    subkeys:
    - key: Authorization Right
      type: <string>
      presence: required
      content: The Authorization Right to update.
    - key: Group
      type: <string>
      presence: required
      content: The group to use for the Authorization Right.
